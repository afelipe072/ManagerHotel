/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista;

import control.ControladorHabitacion;
import control.ControladorRegistro;
import control.ControladorReserva;
import static java.lang.Integer.parseInt;
import java.util.ArrayList;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import modelo.Habitacion;
import modelo.Registro;
import modelo.Reserva;

/**
 *
 * @author USER
 */
public final class VCheckIngCheckOut extends javax.swing.JInternalFrame {

    /**
     * Creates new form VCheckIngCheckOut
     */
    public VCheckIngCheckOut() {
        initComponents();
        numReservas(jcReservas);
        numHabitaciones(jcNumHabitacion);
        jlNumRegistro.setVisible(false);
        jbReserva.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jbReserva = new javax.swing.JButton();
        jbRegistro = new javax.swing.JButton();
        jlCodChecking = new javax.swing.JLabel();
        jcReservas = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jtxtId = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jDIngreso = new com.toedter.calendar.JDateChooser();
        jDSalida = new com.toedter.calendar.JDateChooser();
        jLabel5 = new javax.swing.JLabel();
        jcNumHabitacion = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jtxtNumPersonas = new javax.swing.JTextField();
        jbGuardar = new javax.swing.JButton();
        jlNumRegistro = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jlTotal = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();

        jLabel2.setText("jLabel2");

        setClosable(true);
        setIconifiable(true);
        setTitle("Checking & Checkout");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED), "Checking"));

        jbReserva.setText("Checking con reserva");
        jbReserva.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbReservaActionPerformed(evt);
            }
        });

        jbRegistro.setText("Checking normal");
        jbRegistro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbRegistroActionPerformed(evt);
            }
        });

        jlCodChecking.setText("Seleccione la Reserva: ");

        jcReservas.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcReservasItemStateChanged(evt);
            }
        });

        jLabel1.setText("Identificacion cliente: ");

        jLabel3.setText("Fecha Ingreso: ");

        jLabel4.setText("Fecha Salida: ");

        jLabel5.setText("Numero de Habitacion:");

        jLabel6.setText("Numero de personas: ");

        jbGuardar.setText("Finalizar Registro");
        jbGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbGuardarActionPerformed(evt);
            }
        });

        jlNumRegistro.setAlignmentX(0.5F);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(78, 78, 78)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jbReserva, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jlCodChecking, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jDIngreso, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jDSalida, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jtxtId, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jcReservas, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jlNumRegistro, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addContainerGap(29, Short.MAX_VALUE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(37, 37, 37)
                                .addComponent(jbRegistro, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(58, 58, 58)
                                .addComponent(jcNumHabitacion, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(94, 94, 94)
                                .addComponent(jtxtNumPersonas, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(149, 149, 149)
                .addComponent(jbGuardar)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbReserva)
                    .addComponent(jbRegistro))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 56, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jlCodChecking)
                        .addGap(19, 19, 19))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jlNumRegistro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jcReservas))
                        .addGap(18, 18, 18)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jtxtId, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3)
                        .addGap(3, 3, 3))
                    .addComponent(jDIngreso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4)
                    .addComponent(jDSalida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcNumHabitacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jtxtNumPersonas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addComponent(jbGuardar)
                .addGap(42, 42, 42))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED), "Checkout", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.ABOVE_TOP));

        jLabel10.setText("Numero de registro: ");

        jLabel9.setBackground(new java.awt.Color(255, 255, 0));
        jLabel9.setFont(new java.awt.Font("Trebuchet MS", 0, 12)); // NOI18N
        jLabel9.setText("   SERVICIOS ");
        jLabel9.setAlignmentX(0.5F);
        jLabel9.setOpaque(true);

        jLabel11.setBackground(new java.awt.Color(255, 255, 0));
        jLabel11.setFont(new java.awt.Font("Trebuchet MS", 0, 12)); // NOI18N
        jLabel11.setText("     VALOR");
        jLabel11.setAlignmentX(0.5F);
        jLabel11.setOpaque(true);

        jlTotal.setBackground(new java.awt.Color(255, 255, 0));
        jlTotal.setFont(new java.awt.Font("Trebuchet MS", 0, 12)); // NOI18N
        jlTotal.setText("     TOTAL");
        jlTotal.setAlignmentX(0.5F);
        jlTotal.setOpaque(true);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jlTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE)
                        .addGap(35, 35, 35)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(68, 68, 68))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(100, 100, 100))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addGap(71, 71, 71)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 148, Short.MAX_VALUE)
                .addComponent(jlTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(120, 120, 120))
        );

        jLabel7.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 36)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 0, 255));
        jLabel7.setText("CHECKOUT");
        jLabel7.setToolTipText("");

        jLabel8.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 36)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 0, 255));
        jLabel8.setText("CHECKING");
        jLabel8.setToolTipText("");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(157, 157, 157)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel7)
                .addGap(97, 97, 97))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jcReservasItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcReservasItemStateChanged
        if (jcReservas.getSelectedIndex() == -1) {
        } else {
            int numero = Integer.parseInt(jcReservas.getSelectedItem().toString());
            llenarCheckingReserva(numero);
        }
    }//GEN-LAST:event_jcReservasItemStateChanged

    private void jbReservaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbReservaActionPerformed
        jlCodChecking.setText("Seleccione la Reserva: ");
        jcReservas.setVisible(true);
        jlNumRegistro.setVisible(false);
        jbRegistro.setEnabled(true);
        jbReserva.setEnabled(false);
        limpiarCampos();
    }//GEN-LAST:event_jbReservaActionPerformed

    private void jbRegistroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbRegistroActionPerformed
        jlCodChecking.setText("Numero Registro: ");
        jcReservas.setVisible(false);
        jlNumRegistro.setVisible(true);
        generarNumRegistro();
        jbReserva.setEnabled(true);
        jbRegistro.setEnabled(false);
        limpiarCampos();
    }//GEN-LAST:event_jbRegistroActionPerformed

    private void jbGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbGuardarActionPerformed
        crearRegistro();
        jcReservas.removeAllItems();
        numReservas(jcReservas);
        limpiarCampos();
    }//GEN-LAST:event_jbGuardarActionPerformed

    //eliminarreserva : elimina la reserva que tenga el codigo ingresado
    public void eliminarReserva(int cod) {
        if (buscarReserva(cod)) {
            int resultado = 0;
            resultado = ControladorReserva.eliminarReserva(cod);
            if (resultado == 1) {
                JOptionPane.showMessageDialog(this,
                        "Se elimino la reserva asociada al registro",
                        "Confirmación", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this, "Error Al Eliminar Reserva",
                        "Confirmación", JOptionPane.ERROR_MESSAGE);
            }
        }
    }

    //buscarReserva : retorna true si la reserva ingresada existe en la base de datos o false si no
    public boolean buscarReserva(int cod) {
        ArrayList<Reserva> listadoReservas = new ArrayList();
        listadoReservas = ControladorReserva.listadoReserva();
        for (int i = 0; i < listadoReservas.size(); i++) {
            if (listadoReservas.get(i).getCodigoReserva() == cod) {
                return true;
            }
        }
        return false;
    }

    //buscarRegistro : retorna true si el registro ingresado existe en la base de datos o false si no
    public boolean buscarRegistro(int cod) {
        ArrayList<Registro> listadoRegistro = new ArrayList();
        listadoRegistro = ControladorRegistro.listadoRegistro();
        for (int i = 0; i < listadoRegistro.size(); i++) {
            if (listadoRegistro.get(i).getCodigoRegistro() == cod) {
                return true;
            }
        }
        return false;
    }

    // generarNumRegistro : genera un numero de registro que no exista en la base de datos
    public void generarNumRegistro() {
        String num = "";
        int codReserva;
        for (int i = 0; i < 3; i++) {
            int valorAle = (int) Math.floor(Math.random() * 9);
            num = num + valorAle;
        }
        codReserva = parseInt(num);

        if (buscarReserva(codReserva) || buscarRegistro(codReserva)) {
            generarNumRegistro();
        } else {
            jlNumRegistro.setText(num);
        }
    }

    //llenarCheckingReserva : llena los campos con la informacion de la reserva seleccionada
    public void llenarCheckingReserva(int numReserva) {
        ArrayList<Reserva> listadoReserva = new ArrayList();
        listadoReserva = ControladorReserva.listadoReserva();
        for (int i = 0; i < listadoReserva.size(); i++) {
            if (listadoReserva.get(i).getCodigoReserva() == numReserva) {
                jtxtId.setText("" + listadoReserva.get(i).getCodCliente());
                java.sql.Date fechaBaseI = listadoReserva.get(i).getFechaEntrada();
                jDIngreso.setDate(fechaBaseI);
                java.sql.Date fechaBaseS = listadoReserva.get(i).getFechaSalida();
                jDSalida.setDate(fechaBaseS);
                seleccionarHabitacion(listadoReserva.get(i).getNumeroHabitacion());
                jtxtNumPersonas.setText("" + listadoReserva.get(i).getCantidadPersonas());

            }
        }
    }

    //seleccionarHabitacion : selecciona la habitacion asignada a la reserva dada en el combo box 
    public void seleccionarHabitacion(int numero) {
        jcNumHabitacion.setSelectedItem(numero);
    }

    //numReserva : agrega el numero de las reservas existentes
    public void numReservas(JComboBox j) {
        ArrayList<Reserva> listadoReserva = new ArrayList();
        listadoReserva = ControladorReserva.listadoReserva();
        for (int i = 0; i < listadoReserva.size(); i++) {
            j.addItem(listadoReserva.get(i).getCodigoReserva());
        }
    }

    //numHabitacion : agrega el numero de las habitaciones existentes
    public void numHabitaciones(JComboBox j) {
        ArrayList<Habitacion> listadoHabitacion = new ArrayList();
        listadoHabitacion = ControladorHabitacion.listadoHabitaciones();
        for (int i = 0; i < listadoHabitacion.size(); i++) {
            j.addItem(listadoHabitacion.get(i).getNumero());
        }
    }

    // verificarFechas : verifica que para una habitacion no se crucen las fechas de reserva
    public boolean verificarFechas() {
        java.util.Date fechaNuevaI = jDIngreso.getDate();
        java.util.Date fechaNuevaS = jDSalida.getDate();
        int numHabitacion = (int) jcNumHabitacion.getSelectedItem();
        ArrayList<Reserva> listadoReservas = new ArrayList();
        listadoReservas = ControladorReserva.listadoReserva();
        for (Reserva r : listadoReservas) {
            if (r.getNumeroHabitacion() == numHabitacion) {
                java.sql.Date fechaBaseI = r.getFechaEntrada();
                java.sql.Date fechaBaseS = r.getFechaSalida();
                if (fechaNuevaI.after(fechaBaseI) && fechaNuevaI.before(fechaBaseS)) {
                    JOptionPane.showMessageDialog(this, "La habitacion : " + numHabitacion + " Ya se encuentra reservada desde la fecha : " + fechaBaseI
                            + " hasta la fecha : " + fechaBaseS);
                    return true;
                }
                if (fechaNuevaS.after(fechaBaseI) && fechaNuevaS.before(fechaBaseS)) {
                    JOptionPane.showMessageDialog(this, "La habitacion : " + numHabitacion + " Ya se encuentra reservada desde la fecha : " + fechaBaseI
                            + " hasta la fecha : " + fechaBaseS);
                    return true;
                }
                if (fechaBaseI.after(fechaNuevaI) && fechaBaseI.before(fechaNuevaS)) {
                    JOptionPane.showMessageDialog(this, "La habitacion : " + numHabitacion + " Ya se encuentra reservada desde la fecha : " + fechaBaseI
                            + " hasta la fecha : " + fechaBaseS);
                    return true;
                }
                if (fechaBaseS.after(fechaNuevaI) && fechaBaseS.before(fechaNuevaS)) {
                    JOptionPane.showMessageDialog(this, "La habitacion : " + numHabitacion + " Ya se encuentra reservada desde la fecha : " + fechaBaseI
                            + " hasta la fecha : " + fechaBaseS);
                    return true;
                }
            }
        }
        for (Registro re : ControladorRegistro.listadoRegistro()) {
            if (re.getNumeroHabitacion() == numHabitacion) {
                java.sql.Date fechaBaseI = re.getFechaEntrada();
                java.sql.Date fechaBaseS = re.getFechaSalida();
                if (fechaNuevaI.after(fechaBaseI) && fechaNuevaI.before(fechaBaseS)) {
                    JOptionPane.showMessageDialog(this, "La habitacion : " + numHabitacion + " se encuentra ocupada desde la fecha : " + fechaBaseI
                            + " hasta la fecha : " + fechaBaseS);
                    return true;
                }
                if (fechaNuevaS.after(fechaBaseI) && fechaNuevaS.before(fechaBaseS)) {
                    JOptionPane.showMessageDialog(this, "La habitacion : " + numHabitacion + " se encuentra ocupada desde la fecha : " + fechaBaseI
                            + " hasta la fecha : " + fechaBaseS);
                    return true;
                }
                if (fechaBaseI.after(fechaNuevaI) && fechaBaseI.before(fechaNuevaS)) {
                    JOptionPane.showMessageDialog(this, "La habitacion : " + numHabitacion + " se encuentra ocupada desde la fecha : " + fechaBaseI
                            + " hasta la fecha : " + fechaBaseS);
                    return true;
                }
                if (fechaBaseS.after(fechaNuevaI) && fechaBaseS.before(fechaNuevaS)) {
                    JOptionPane.showMessageDialog(this, "La habitacion : " + numHabitacion + " se encuentra ocupada desde la fecha : " + fechaBaseI
                            + " hasta la fecha : " + fechaBaseS);
                    return true;
                }
            }
        }
        return false;
    }

    //crearReserva :  crea la reserva si toda la informacion esta completa
    public void crearRegistro() {
        if (camposVacios() && !verificarFechas()) {
            java.util.Date dateI = jDIngreso.getDate();
            java.util.Date dateS = jDSalida.getDate();
            long i = dateI.getTime();
            long s = dateS.getTime();
            java.sql.Date fechaI = new java.sql.Date(i);
            java.sql.Date fechaS = new java.sql.Date(s);
            Registro unRegistro = new Registro();
            if (!jbRegistro.isEnabled()) {
                unRegistro.setCodigoRegistro(parseInt(jlNumRegistro.getText()));
            } else {
                unRegistro.setCodigoRegistro(Integer.parseInt(jcReservas.getSelectedItem().toString()));
            }
            unRegistro.setNumeroHabitacion(Integer.parseInt(jcNumHabitacion.getSelectedItem().toString()));
            unRegistro.setCodCliente(parseInt(jtxtId.getText()));
            unRegistro.setFechaEntrada(fechaI);
            unRegistro.setFechaSalida(fechaS);
            unRegistro.setCantidadPersonas(parseInt(jtxtNumPersonas.getText()));

            int resultado = 0;
            resultado = ControladorRegistro.crearRegistro(unRegistro);
            if (resultado == 1) {
                eliminarReserva(unRegistro.getCodigoRegistro());
                modificarEstadoHab(unRegistro.getNumeroHabitacion());
                JOptionPane.showMessageDialog(this,
                        "Registro Reaizado Con éxito",
                        "Confirmación", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this, "Error Al Realizar Registro",
                        "Confirmación", JOptionPane.ERROR_MESSAGE);
            }
        }
    }

    // camposVacios retorna true si todos los campos estan llenos o false si hay campos vacios
    public boolean camposVacios() {
        if ("".equals(jtxtId.getText()) || "".equals(jDIngreso.getDate().toString()) || "".equals(jDSalida.getDate().toString()) || jcNumHabitacion.getSelectedItem().toString() == "" || "".equals(jtxtNumPersonas.getText())) {
            JOptionPane.showMessageDialog(this, "por favor llene todos los campos");
            return false;
        } else {
            return true;
        }
    }

    // limpìatCampos : borra toda al informacion de la ventana 
    public void limpiarCampos() {
        jtxtId.setText("");
        jDIngreso.setDate(null);
        jDSalida.setDate(null);
        jtxtNumPersonas.setText("");
        jcNumHabitacion.setSelectedIndex(-1);
        jcReservas.setSelectedIndex(-1);
        generarNumRegistro();
    }

    //modificarEstadoHab : Cambia el estado de la habitacion si esta siendo ocupada
    public void modificarEstadoHab(int num) {
        ArrayList<Habitacion> listadoHabitaciones = new ArrayList<>();
        listadoHabitaciones = ControladorHabitacion.listadoHabitaciones();
        for (Habitacion h : listadoHabitaciones) {
            if (h.getNumero() == num) {
                h.setEstado("ocupado");
                int resultado = ControladorHabitacion.modificarHabitacion(h);
                if (resultado == 1) {
                    JOptionPane.showMessageDialog(this,
                            "La habitacion : "+num+" cambio su estado a ocupado",
                            "Confirmación", JOptionPane.INFORMATION_MESSAGE);
                    limpiarCampos();
                } else {
                    JOptionPane.showMessageDialog(this, "Error Al Modificar Habitacion",
                            "Confirmación", JOptionPane.ERROR_MESSAGE);
                }
            }
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> jComboBox1;
    private com.toedter.calendar.JDateChooser jDIngreso;
    private com.toedter.calendar.JDateChooser jDSalida;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JButton jbGuardar;
    private javax.swing.JButton jbRegistro;
    private javax.swing.JButton jbReserva;
    private javax.swing.JComboBox<String> jcNumHabitacion;
    private javax.swing.JComboBox<String> jcReservas;
    private javax.swing.JLabel jlCodChecking;
    private javax.swing.JLabel jlNumRegistro;
    private javax.swing.JLabel jlTotal;
    private javax.swing.JTextField jtxtId;
    private javax.swing.JTextField jtxtNumPersonas;
    // End of variables declaration//GEN-END:variables
}
